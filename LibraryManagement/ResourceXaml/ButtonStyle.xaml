<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    
    <!--ControlBar Button-->

    <Style x:Key="ControlBarButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Margin" Value="4 0 4 0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="OpacityMask" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Button Maximize-->
    <Style x:Key="ControlBarButtonMaximize" TargetType="Button" BasedOn="{StaticResource ControlBarButton}">
        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=WindowMaximize}"/>
        <Setter Property="ToolTip" Value="Maximize"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding isMaximize}" Value="true">
                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=WindowRestore}"/>
                <Setter Property="ToolTip" Value="Restore Down"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    
    <!--Menu Button-->

    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="20 4 20 4"/>
        <Setter Property="Tag" Value="None"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F1F1F1"/>
                <Setter Property="Tag" Value="Underline"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            </Trigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.050" Storyboard.TargetProperty="FontSize" To="20" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.050" Storyboard.TargetProperty="FontSize" To="16" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <DropShadowBitmapEffect x:Key="DropShadowButton" Softness="2" ShadowDepth="5" Color="LightGray" Direction="260"/>
    <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
        <Setter Property="BitmapEffect" Value="{StaticResource DropShadowButton}"/>
        <Setter Property="Background" Value="#6D78CB"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="174"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchButton" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        CornerRadius="18" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <Path 
                            Data="{DynamicResource Search}" 
                            Fill="White" 
                            Width="15" 
                            Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlButonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignPaperSecondaryLightButton}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="20 8 20 8"/>
        <Setter Property="Tag" Value="None"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="Tag" Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>